<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<!-- Don't use them if you use annotation in classess -->
<!-- 	<bean id="HandlerMapping" -->
<!-- 		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" /> -->

<!-- 	<bean class="com.heli.index.controller.IndexController" /> -->
	
	<!-- instead, use component scan all controllers in package, saved into memory -->
	
	<context:component-scan base-package="com.heli">
		<context:exclude-filter type="assignable" expression="com.heli.product.dao.ProductDAOImpl" />
	</context:component-scan>
	
<!-- 	<bean id="jspViewResolver" -->
<!-- 		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 		<property name="prefix"> -->
<!-- 			<value>/WEB-INF/</value> -->
<!-- 		</property> -->
<!-- 		<property name="suffix"> -->
<!-- 			<value>.jsp</value> -->
<!-- 		</property> -->
<!-- 		<property name="order" value="0"/> -->
<!-- 	</bean> -->

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/defs/general.xml</value>
			</list>
		</property>
	</bean>
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>
	
	<!-- here is mysql database configuration -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/pes" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>
	
	<bean id="ProductDAO" class="com.heli.product.dao.ProductDAOImpl">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>
<!-- 	here load jdbc.properties file --> 
<!-- 	<context:property-placeholder location="classpath*:jdbc.properties"/> -->
</beans>
